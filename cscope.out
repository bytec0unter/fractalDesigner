cscope 15 /media/stuv/PROJECTS/programming/cpp/fractalDesigner/fractalDesigner               0000049299
	@build/CMakeFiles/3.28.20231111-g33d372c/CompilerIdCXX/CMakeCXXCompilerId.cpp

4 #iâdeà
__ýlu¥lus


8 #ià!
defšed
(
__has_šþude
)

11 
	#__has_šþude
(
x
è0

	)

18 #ià
defšed
(
__INTEL_COMPILER
è|| defšed(
__ICC
)

19 
	#COMPILER_ID
 "IÁ–"

	)

20 #ià
defšed
(
_MSC_VER
)

21 
	#SIMULATE_ID
 "MSVC"

	)

23 #ià
defšed
(
__GNUC__
)

24 
	#SIMULATE_ID
 "GNU"

	)

28 #ià
__INTEL_COMPILER
 < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111

29 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
/100)

	)

30 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER
/10 % 10)

	)

31 #ià
defšed
(
__INTEL_COMPILER_UPDATE
)

32 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER_UPDATE
)

	)

34 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER
 % 10)

	)

37 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
)

	)

38 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER_UPDATE
)

	)

41 
	#COMPILER_VERSION_PATCH
 
	`DEC
(0)

	)

43 #ià
defšed
(
__INTEL_COMPILER_BUILD_DATE
)

45 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__INTEL_COMPILER_BUILD_DATE
)

	)

47 #ià
defšed
(
_MSC_VER
)

49 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

50 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

52 #ià
defšed
(
__GNUC__
)

53 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

54 #–ià
defšed
(
__GNUG__
)

55 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
__GNUG__
)

	)

57 #ià
defšed
(
__GNUC_MINOR__
)

58 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

60 #ià
defšed
(
__GNUC_PATCHLEVEL__
)

61 
	#SIMULATE_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

64 #–ià(
defšed
(
__þªg__
è&& defšed(
__INTEL_CLANG_COMPILER
)è|| defšed(
__INTEL_LLVM_COMPILER
)

65 
	#COMPILER_ID
 "IÁ–LLVM"

	)

66 #ià
defšed
(
_MSC_VER
)

67 
	#SIMULATE_ID
 "MSVC"

	)

69 #ià
defšed
(
__GNUC__
)

70 
	#SIMULATE_ID
 "GNU"

	)

76 #ià
__INTEL_LLVM_COMPILER
 < 1000000L

77 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_LLVM_COMPILER
/100)

	)

78 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_LLVM_COMPILER
/10 % 10)

	)

79 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_LLVM_COMPILER
 % 10)

	)

81 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_LLVM_COMPILER
/10000)

	)

82 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_LLVM_COMPILER
/100 % 100)

	)

83 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_LLVM_COMPILER
 % 100)

	)

85 #ià
defšed
(
_MSC_VER
)

87 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

88 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

90 #ià
defšed
(
__GNUC__
)

91 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

92 #–ià
defšed
(
__GNUG__
)

93 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
__GNUG__
)

	)

95 #ià
defšed
(
__GNUC_MINOR__
)

96 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

98 #ià
defšed
(
__GNUC_PATCHLEVEL__
)

99 
	#SIMULATE_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

102 #–ià
defšed
(
__PATHCC__
)

103 
	#COMPILER_ID
 "P©hSÿË"

	)

104 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PATHCC__
)

	)

105 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PATHCC_MINOR__
)

	)

106 #ià
defšed
(
__PATHCC_PATCHLEVEL__
)

107 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PATHCC_PATCHLEVEL__
)

	)

110 #–ià
defšed
(
__BORLANDC__
è&& defšed(
__CODEGEARC_VERSION__
)

111 
	#COMPILER_ID
 "Emb¬ÿd”o"

	)

112 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>24 & 0x00FF)

	)

113 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>16 & 0x00FF)

	)

114 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__CODEGEARC_VERSION__
 & 0xFFFF)

	)

116 #–ià
defšed
(
__BORLANDC__
)

117 
	#COMPILER_ID
 "BÜÏnd"

	)

119 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__BORLANDC__
>>8)

	)

120 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__BORLANDC__
 & 0xFF)

	)

122 #–ià
defšed
(
__WATCOMC__
) && __WATCOMC__ < 1200

123 
	#COMPILER_ID
 "W©com"

	)

125 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__WATCOMC__
 / 100)

	)

126 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10è% 10)

	)

127 #ià(
__WATCOMC__
 % 10) > 0

128 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

131 #–ià
defšed
(
__WATCOMC__
)

132 
	#COMPILER_ID
 "O³nW©com"

	)

134 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__WATCOMC__
 - 1100è/ 100)

	)

135 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10è% 10)

	)

136 #ià(
__WATCOMC__
 % 10) > 0

137 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

140 #–ià
defšed
(
__SUNPRO_CC
)

141 
	#COMPILER_ID
 "SunPro"

	)

142 #ià
__SUNPRO_CC
 >= 0x5100

144 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>12)

	)

145 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xFF)

	)

146 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

149 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>8)

	)

150 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xF)

	)

151 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

154 #–ià
defšed
(
__HP_aCC
)

155 
	#COMPILER_ID
 "HP"

	)

157 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__HP_aCC
/10000)

	)

158 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__HP_aCC
/100 % 100)

	)

159 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__HP_aCC
 % 100)

	)

161 #–ià
defšed
(
__DECCXX
)

162 
	#COMPILER_ID
 "Com·q"

	)

164 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__DECCXX_VER
/10000000)

	)

165 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__DECCXX_VER
/100000 % 100)

	)

166 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__DECCXX_VER
 % 10000)

	)

168 #–ià
defšed
(
__IBMCPP__
è&& defšed(
__COMPILER_VER__
)

169 
	#COMPILER_ID
 "zOS"

	)

171 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

172 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

173 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

175 #–ià
defšed
(
__Ý’_xl__
è&& defšed(
__þªg__
)

176 
	#COMPILER_ID
 "IBMCÏng"

	)

177 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__Ý’_xl_v”siÚ__
)

	)

178 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__Ý’_xl_»Ëa£__
)

	)

179 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__Ý’_xl_modifiÿtiÚ__
)

	)

180 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__Ý’_xl_±f_fix_Ëv–__
)

	)

183 #–ià
defšed
(
__ibmxl__
è&& defšed(
__þªg__
)

184 
	#COMPILER_ID
 "XLCÏng"

	)

185 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ibmxl_v”siÚ__
)

	)

186 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ibmxl_»Ëa£__
)

	)

187 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ibmxl_modifiÿtiÚ__
)

	)

188 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__ibmxl_±f_fix_Ëv–__
)

	)

191 #–ià
defšed
(
__IBMCPP__
è&& !defšed(
__COMPILER_VER__
) && __IBMCPP__ >= 800

192 
	#COMPILER_ID
 "XL"

	)

194 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

195 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

196 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

198 #–ià
defšed
(
__IBMCPP__
è&& !defšed(
__COMPILER_VER__
) && __IBMCPP__ < 800

199 
	#COMPILER_ID
 "Visu®Age"

	)

201 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

202 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

203 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

205 #–ià
defšed
(
__NVCOMPILER
)

206 
	#COMPILER_ID
 "NVHPC"

	)

207 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__NVCOMPILER_MAJOR__
)

	)

208 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__NVCOMPILER_MINOR__
)

	)

209 #ià
defšed
(
__NVCOMPILER_PATCHLEVEL__
)

210 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__NVCOMPILER_PATCHLEVEL__
)

	)

213 #–ià
defšed
(
__PGI
)

214 
	#COMPILER_ID
 "PGI"

	)

215 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PGIC__
)

	)

216 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PGIC_MINOR__
)

	)

217 #ià
defšed
(
__PGIC_PATCHLEVEL__
)

218 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PGIC_PATCHLEVEL__
)

	)

221 #–ià
defšed
(
__þªg__
è&& defšed(
__üay__
)

222 
	#COMPILER_ID
 "C¿yCÏng"

	)

223 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__üay_majÜ__
)

	)

224 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__üay_mšÜ__
)

	)

225 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__üay_·tchËv–__
)

	)

226 
	#COMPILER_VERSION_INTERNAL_STR
 
__þªg_v”siÚ__


	)

229 #–ià
defšed
(
_CRAYC
)

230 
	#COMPILER_ID
 "C¿y"

	)

231 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_RELEASE_MAJOR
)

	)

232 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_RELEASE_MINOR
)

	)

234 #–ià
defšed
(
__TI_COMPILER_VERSION__
)

235 
	#COMPILER_ID
 "TI"

	)

237 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000000)

	)

238 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000 % 1000)

	)

239 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__TI_COMPILER_VERSION__
 % 1000)

	)

241 #–ià
defšed
(
__CLANG_FUJITSU
)

242 
	#COMPILER_ID
 "Fuj™suCÏng"

	)

243 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__FCC_majÜ__
)

	)

244 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__FCC_mšÜ__
)

	)

245 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__FCC_·tchËv–__
)

	)

246 
	#COMPILER_VERSION_INTERNAL_STR
 
__þªg_v”siÚ__


	)

249 #–ià
defšed
(
__FUJITSU
)

250 
	#COMPILER_ID
 "Fuj™su"

	)

251 #ià
defšed
(
__FCC_v”siÚ__
)

252 
	#COMPILER_VERSION
 
__FCC_v”siÚ__


	)

253 #–ià
defšed
(
__FCC_majÜ__
)

254 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__FCC_majÜ__
)

	)

255 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__FCC_mšÜ__
)

	)

256 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__FCC_·tchËv–__
)

	)

258 #ià
defšed
(
__fcc_v”siÚ
)

259 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__fcc_v”siÚ
)

	)

260 #–ià
defšed
(
__FCC_VERSION
)

261 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__FCC_VERSION
)

	)

265 #–ià
defšed
(
__ghs__
)

266 
	#COMPILER_ID
 "GHS"

	)

268 #ifdeà
__GHS_VERSION_NUMBER


269 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GHS_VERSION_NUMBER
 / 100)

	)

270 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GHS_VERSION_NUMBER
 / 10 % 10)

	)

271 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GHS_VERSION_NUMBER
 % 10)

	)

274 #–ià
defšed
(
__TASKING__
)

275 
	#COMPILER_ID
 "Taskšg"

	)

276 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__VERSION__
/1000)

	)

277 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__VERSION__
 % 100)

	)

278 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__VERSION__
)

	)

280 #–ià
defšed
(
__ORANGEC__
)

281 
	#COMPILER_ID
 "O¿ngeC"

	)

282 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ORANGEC_MAJOR__
)

	)

283 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ORANGEC_MINOR__
)

	)

284 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ORANGEC_PATCHLEVEL__
)

	)

286 #–ià
defšed
(
__SCO_VERSION__
)

287 
	#COMPILER_ID
 "SCO"

	)

289 #–ià
defšed
(
__ARMCC_VERSION
è&& !defšed(
__þªg__
)

290 
	#COMPILER_ID
 "ARMCC"

	)

291 #ià
__ARMCC_VERSION
 >= 1000000

293 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/1000000)

	)

294 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 100)

	)

295 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

298 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/100000)

	)

299 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 10)

	)

300 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

304 #–ià
defšed
(
__þªg__
è&& defšed(
__­¶e_bužd_v”siÚ__
)

305 
	#COMPILER_ID
 "AµËCÏng"

	)

306 #ià
defšed
(
_MSC_VER
)

307 
	#SIMULATE_ID
 "MSVC"

	)

309 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__þªg_majÜ__
)

	)

310 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__þªg_mšÜ__
)

	)

311 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__þªg_·tchËv–__
)

	)

312 #ià
defšed
(
_MSC_VER
)

314 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

315 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

317 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__­¶e_bužd_v”siÚ__
)

	)

319 #–ià
defšed
(
__þªg__
è&& defšed(
__ARMCOMPILER_VERSION
)

320 
	#COMPILER_ID
 "ARMCÏng"

	)

321 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCOMPILER_VERSION
/1000000)

	)

322 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCOMPILER_VERSION
/10000 % 100)

	)

323 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCOMPILER_VERSION
/100 % 100)

	)

324 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__ARMCOMPILER_VERSION
)

	)

326 #–ià
defšed
(
__þªg__
)

327 
	#COMPILER_ID
 "CÏng"

	)

328 #ià
defšed
(
_MSC_VER
)

329 
	#SIMULATE_ID
 "MSVC"

	)

331 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__þªg_majÜ__
)

	)

332 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__þªg_mšÜ__
)

	)

333 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__þªg_·tchËv–__
)

	)

334 #ià
defšed
(
_MSC_VER
)

336 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

337 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

340 #–ià
defšed
(
__LCC__
è&& (defšed(
__GNUC__
è|| defšed(
__GNUG__
è|| defšed(
__MCST__
))

341 
	#COMPILER_ID
 "LCC"

	)

342 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__LCC__
 / 100)

	)

343 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__LCC__
 % 100)

	)

344 #ià
defšed
(
__LCC_MINOR__
)

345 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__LCC_MINOR__
)

	)

347 #ià
defšed
(
__GNUC__
è&& defšed(
__GNUC_MINOR__
)

348 
	#SIMULATE_ID
 "GNU"

	)

349 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

350 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

351 #ià
defšed
(
__GNUC_PATCHLEVEL__
)

352 
	#SIMULATE_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

356 #–ià
defšed
(
__GNUC__
è|| defšed(
__GNUG__
)

357 
	#COMPILER_ID
 "GNU"

	)

358 #ià
defšed
(
__GNUC__
)

359 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

361 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUG__
)

	)

363 #ià
defšed
(
__GNUC_MINOR__
)

364 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

366 #ià
defšed
(
__GNUC_PATCHLEVEL__
)

367 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

370 #–ià
defšed
(
_MSC_VER
)

371 
	#COMPILER_ID
 "MSVC"

	)

373 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

374 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

375 #ià
defšed
(
_MSC_FULL_VER
)

376 #ià
_MSC_VER
 >= 1400

378 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 100000)

	)

381 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 10000)

	)

384 #ià
defšed
(
_MSC_BUILD
)

385 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
_MSC_BUILD
)

	)

388 #–ià
defšed
(
_ADI_COMPILER
)

389 
	#COMPILER_ID
 "ADSP"

	)

390 #ià
defšed
(
__VERSIONNUM__
)

392 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__VERSIONNUM__
 >> 24 & 0xFF)

	)

393 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__VERSIONNUM__
 >> 16 & 0xFF)

	)

394 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__VERSIONNUM__
 >> 8 & 0xFF)

	)

395 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__VERSIONNUM__
 & 0xFF)

	)

398 #–ià
defšed
(
__IAR_SYSTEMS_ICC__
è|| defšed(
__IAR_SYSTEMS_ICC
)

399 
	#COMPILER_ID
 "IAR"

	)

400 #ià
defšed
(
__VER__
è&& defšed(
__ICCARM__
)

401 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__VER__
è/ 1000000)

	)

402 
	#COMPILER_VERSION_MINOR
 
	`DEC
(((
__VER__
è/ 1000è% 1000)

	)

403 
	#COMPILER_VERSION_PATCH
 
	`DEC
((
__VER__
è% 1000)

	)

404 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__IAR_SYSTEMS_ICC__
)

	)

405 #–ià
defšed
(
__VER__
è&& (defšed(
__ICCAVR__
è|| defšed(
__ICCRX__
è|| defšed(
__ICCRH850__
è|| defšed(
__ICCRL78__
è|| defšed(
__ICC430__
è|| defšed(
__ICCRISCV__
è|| defšed(
__ICCV850__
è|| defšed(
__ICC8051__
è|| defšed(
__ICCSTM8__
))

406 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__VER__
è/ 100)

	)

407 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__VER__
è- (((__VER__è/ 100)*100))

	)

408 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__SUBVERSION__
)

	)

409 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__IAR_SYSTEMS_ICC__
)

	)

416 #–ià
defšed
(
__hpux
è|| defšed(
__hpua
)

417 
	#COMPILER_ID
 "HP"

	)

420 
	#COMPILER_ID
 ""

	)

427 cÚ¡* 
	gšfo_compž”
 = "INFO" ":" "compž”[" 
COMPILER_ID
 "]";

428 #ifdeà
SIMULATE_ID


429 cÚ¡* 
	gšfo_simuÏ‹
 = "INFO" ":" "simuÏ‹[" 
SIMULATE_ID
 "]";

432 #ifdeà
__QNXNTO__


433 cÚ¡* 
	gqnxÁo
 = "INFO" ":" "qnxnto[]";

436 #ià
defšed
(
__CRAYXT_COMPUTE_LINUX_TARGET
)

437 cÚ¡ *
	gšfo_üay
 = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";

440 
	#STRINGIFY_HELPER
(
X
è#X

	)

441 
	#STRINGIFY
(
X
è
	`STRINGIFY_HELPER
(X)

	)

444 #ià
defšed
(
__lšux
è|| defšed(
__lšux__
è|| defšed(
lšux
)

445 
	#PLATFORM_ID
 "Lšux"

	)

447 #–ià
defšed
(
__MSYS__
)

448 
	#PLATFORM_ID
 "MSYS"

	)

450 #–ià
defšed
(
__CYGWIN__
)

451 
	#PLATFORM_ID
 "Cygwš"

	)

453 #–ià
defšed
(
__MINGW32__
)

454 
	#PLATFORM_ID
 "MšGW"

	)

456 #–ià
defšed
(
__APPLE__
)

457 
	#PLATFORM_ID
 "D¬wš"

	)

459 #–ià
defšed
(
_WIN32
è|| defšed(
__WIN32__
è|| defšed(
WIN32
)

460 
	#PLATFORM_ID
 "Wšdows"

	)

462 #–ià
defšed
(
__F»eBSD__
è|| defšed(
__F»eBSD
)

463 
	#PLATFORM_ID
 "F»eBSD"

	)

465 #–ià
defšed
(
__N‘BSD__
è|| defšed(
__N‘BSD
)

466 
	#PLATFORM_ID
 "N‘BSD"

	)

468 #–ià
defšed
(
__O³nBSD__
è|| defšed(
__OPENBSD
)

469 
	#PLATFORM_ID
 "O³nBSD"

	)

471 #–ià
defšed
(
__sun
è|| defšed(
sun
)

472 
	#PLATFORM_ID
 "SunOS"

	)

474 #–ià
defšed
(
_AIX
è|| defšed(
__AIX
è|| defšed(
__AIX__
è|| defšed(
__aix
è|| defšed(
__aix__
)

475 
	#PLATFORM_ID
 "AIX"

	)

477 #–ià
defšed
(
__hpux
è|| defšed(
__hpux__
)

478 
	#PLATFORM_ID
 "HP-UX"

	)

480 #–ià
defšed
(
__HAIKU__
)

481 
	#PLATFORM_ID
 "Haiku"

	)

483 #–ià
defšed
(
__BeOS
è|| defšed(
__BEOS__
è|| defšed(
_BEOS
)

484 
	#PLATFORM_ID
 "BeOS"

	)

486 #–ià
defšed
(
__QNX__
è|| defšed(
__QNXNTO__
)

487 
	#PLATFORM_ID
 "QNX"

	)

489 #–ià
defšed
(
__Œu64
è|| defšed(
_Œu64
è|| defšed(
__TRU64__
)

490 
	#PLATFORM_ID
 "Tru64"

	)

492 #–ià
defšed
(
__riscos
è|| defšed(
__riscos__
)

493 
	#PLATFORM_ID
 "RISCos"

	)

495 #–ià
defšed
(
__sšix
è|| defšed(
__sšix__
è|| defšed(
__SINIX__
)

496 
	#PLATFORM_ID
 "SINIX"

	)

498 #–ià
defšed
(
__UNIX_SV__
)

499 
	#PLATFORM_ID
 "UNIX_SV"

	)

501 #–ià
defšed
(
__bsdos__
)

502 
	#PLATFORM_ID
 "BSDOS"

	)

504 #–ià
defšed
(
_MPRAS
è|| defšed(
MPRAS
)

505 
	#PLATFORM_ID
 "MP-RAS"

	)

507 #–ià
defšed
(
__osf
è|| defšed(
__osf__
)

508 
	#PLATFORM_ID
 "OSF1"

	)

510 #–ià
defšed
(
_SCO_SV
è|| defšed(
SCO_SV
è|| defšed(
sco_sv
)

511 
	#PLATFORM_ID
 "SCO_SV"

	)

513 #–ià
defšed
(
__uÉrix
è|| defšed(
__uÉrix__
è|| defšed(
_ULTRIX
)

514 
	#PLATFORM_ID
 "ULTRIX"

	)

516 #–ià
defšed
(
__XENIX__
è|| defšed(
_XENIX
è|| defšed(
XENIX
)

517 
	#PLATFORM_ID
 "X’ix"

	)

519 #–ià
defšed
(
__WATCOMC__
)

520 #ià
defšed
(
__LINUX__
)

521 
	#PLATFORM_ID
 "Lšux"

	)

523 #–ià
defšed
(
__DOS__
)

524 
	#PLATFORM_ID
 "DOS"

	)

526 #–ià
defšed
(
__OS2__
)

527 
	#PLATFORM_ID
 "OS2"

	)

529 #–ià
defšed
(
__WINDOWS__
)

530 
	#PLATFORM_ID
 "Wšdows3x"

	)

532 #–ià
defšed
(
__VXWORKS__
)

533 
	#PLATFORM_ID
 "VxWÜks"

	)

536 
	#PLATFORM_ID


	)

539 #–ià
defšed
(
__INTEGRITY
)

540 #ià
defšed
(
INT_178B
)

541 
	#PLATFORM_ID
 "IÁegr™y178"

	)

544 
	#PLATFORM_ID
 "IÁegr™y"

	)

547 #–ià
defšed
(
_ADI_COMPILER
)

548 
	#PLATFORM_ID
 "ADSP"

	)

551 
	#PLATFORM_ID


	)

560 #ià
defšed
(
_WIN32
è&& defšed(
_MSC_VER
)

561 #ià
defšed
(
_M_IA64
)

562 
	#ARCHITECTURE_ID
 "IA64"

	)

564 #–ià
defšed
(
_M_ARM64EC
)

565 
	#ARCHITECTURE_ID
 "ARM64EC"

	)

567 #–ià
defšed
(
_M_X64
è|| defšed(
_M_AMD64
)

568 
	#ARCHITECTURE_ID
 "x64"

	)

570 #–ià
defšed
(
_M_IX86
)

571 
	#ARCHITECTURE_ID
 "X86"

	)

573 #–ià
defšed
(
_M_ARM64
)

574 
	#ARCHITECTURE_ID
 "ARM64"

	)

576 #–ià
defšed
(
_M_ARM
)

577 #ià
_M_ARM
 == 4

578 
	#ARCHITECTURE_ID
 "ARMV4I"

	)

579 #–ià
_M_ARM
 == 5

580 
	#ARCHITECTURE_ID
 "ARMV5I"

	)

582 
	#ARCHITECTURE_ID
 "ARMV" 
	`STRINGIFY
(
_M_ARM
)

	)

585 #–ià
defšed
(
_M_MIPS
)

586 
	#ARCHITECTURE_ID
 "MIPS"

	)

588 #–ià
defšed
(
_M_SH
)

589 
	#ARCHITECTURE_ID
 "SHx"

	)

592 
	#ARCHITECTURE_ID
 ""

	)

595 #–ià
defšed
(
__WATCOMC__
)

596 #ià
defšed
(
_M_I86
)

597 
	#ARCHITECTURE_ID
 "I86"

	)

599 #–ià
defšed
(
_M_IX86
)

600 
	#ARCHITECTURE_ID
 "X86"

	)

603 
	#ARCHITECTURE_ID
 ""

	)

606 #–ià
defšed
(
__IAR_SYSTEMS_ICC__
è|| defšed(
__IAR_SYSTEMS_ICC
)

607 #ià
defšed
(
__ICCARM__
)

608 
	#ARCHITECTURE_ID
 "ARM"

	)

610 #–ià
defšed
(
__ICCRX__
)

611 
	#ARCHITECTURE_ID
 "RX"

	)

613 #–ià
defšed
(
__ICCRH850__
)

614 
	#ARCHITECTURE_ID
 "RH850"

	)

616 #–ià
defšed
(
__ICCRL78__
)

617 
	#ARCHITECTURE_ID
 "RL78"

	)

619 #–ià
defšed
(
__ICCRISCV__
)

620 
	#ARCHITECTURE_ID
 "RISCV"

	)

622 #–ià
defšed
(
__ICCAVR__
)

623 
	#ARCHITECTURE_ID
 "AVR"

	)

625 #–ià
defšed
(
__ICC430__
)

626 
	#ARCHITECTURE_ID
 "MSP430"

	)

628 #–ià
defšed
(
__ICCV850__
)

629 
	#ARCHITECTURE_ID
 "V850"

	)

631 #–ià
defšed
(
__ICC8051__
)

632 
	#ARCHITECTURE_ID
 "8051"

	)

634 #–ià
defšed
(
__ICCSTM8__
)

635 
	#ARCHITECTURE_ID
 "STM8"

	)

638 
	#ARCHITECTURE_ID
 ""

	)

641 #–ià
defšed
(
__ghs__
)

642 #ià
defšed
(
__PPC64__
)

643 
	#ARCHITECTURE_ID
 "PPC64"

	)

645 #–ià
defšed
(
__µc__
)

646 
	#ARCHITECTURE_ID
 "PPC"

	)

648 #–ià
defšed
(
__ARM__
)

649 
	#ARCHITECTURE_ID
 "ARM"

	)

651 #–ià
defšed
(
__x86_64__
)

652 
	#ARCHITECTURE_ID
 "x64"

	)

654 #–ià
defšed
(
__i386__
)

655 
	#ARCHITECTURE_ID
 "X86"

	)

658 
	#ARCHITECTURE_ID
 ""

	)

661 #–ià
defšed
(
__TI_COMPILER_VERSION__
)

662 #ià
defšed
(
__TI_ARM__
)

663 
	#ARCHITECTURE_ID
 "ARM"

	)

665 #–ià
defšed
(
__MSP430__
)

666 
	#ARCHITECTURE_ID
 "MSP430"

	)

668 #–ià
defšed
(
__TMS320C28XX__
)

669 
	#ARCHITECTURE_ID
 "TMS320C28x"

	)

671 #–ià
defšed
(
__TMS320C6X__
è|| defšed(
_TMS320C6X
)

672 
	#ARCHITECTURE_ID
 "TMS320C6x"

	)

675 
	#ARCHITECTURE_ID
 ""

	)

678 #–ià
defšed
(
__ADSPSHARC__
)

679 
	#ARCHITECTURE_ID
 "SHARC"

	)

681 #–ià
defšed
(
__ADSPBLACKFIN__
)

682 
	#ARCHITECTURE_ID
 "BÏckfš"

	)

684 #–ià
defšed
(
__TASKING__
)

686 #ià
defšed
(
__CTC__
è|| defšed(
__CPTC__
)

687 
	#ARCHITECTURE_ID
 "TriCÜe"

	)

689 #–ià
defšed
(
__CMCS__
)

690 
	#ARCHITECTURE_ID
 "MCS"

	)

692 #–ià
defšed
(
__CARM__
)

693 
	#ARCHITECTURE_ID
 "ARM"

	)

695 #–ià
defšed
(
__CARC__
)

696 
	#ARCHITECTURE_ID
 "ARC"

	)

698 #–ià
defšed
(
__C51__
)

699 
	#ARCHITECTURE_ID
 "8051"

	)

701 #–ià
defšed
(
__CPCP__
)

702 
	#ARCHITECTURE_ID
 "PCP"

	)

705 
	#ARCHITECTURE_ID
 ""

	)

709 
	#ARCHITECTURE_ID


	)

713 
	#DEC
(
n
) \

714 ('0' + (((
n
) / 10000000)%10)), \

715 ('0' + (((
n
) / 1000000)%10)), \

716 ('0' + (((
n
) / 100000)%10)), \

717 ('0' + (((
n
) / 10000)%10)), \

718 ('0' + (((
n
) / 1000)%10)), \

719 ('0' + (((
n
) / 100)%10)), \

720 ('0' + (((
n
) / 10)%10)), \

721 ('0' + ((
n
è% 10))

	)

724 
	#HEX
(
n
) \

725 ('0' + ((
n
)>>28 & 0xF)), \

726 ('0' + ((
n
)>>24 & 0xF)), \

727 ('0' + ((
n
)>>20 & 0xF)), \

728 ('0' + ((
n
)>>16 & 0xF)), \

729 ('0' + ((
n
)>>12 & 0xF)), \

730 ('0' + ((
n
)>>8 & 0xF)), \

731 ('0' + ((
n
)>>4 & 0xF)), \

732 ('0' + ((
n
è& 0xF))

	)

735 #ifdeà
COMPILER_VERSION


736 cÚ¡* 
	gšfo_v”siÚ
 = "INFO" ":" "compž”_v”siÚ[" 
COMPILER_VERSION
 "]";

739 #–ià
defšed
(
COMPILER_VERSION_MAJOR
)

740 cÚ¡ 
	gšfo_v”siÚ
[] = {

743 
COMPILER_VERSION_MAJOR
,

744 #ifdeà
COMPILER_VERSION_MINOR


745 '.', 
COMPILER_VERSION_MINOR
,

746 #ifdeà
COMPILER_VERSION_PATCH


747 '.', 
COMPILER_VERSION_PATCH
,

748 #ifdeà
COMPILER_VERSION_TWEAK


749 '.', 
COMPILER_VERSION_TWEAK
,

757 #ifdeà
COMPILER_VERSION_INTERNAL


758 cÚ¡ 
	gšfo_v”siÚ_š‹º®
[] = {

762 
COMPILER_VERSION_INTERNAL
,']','\0'};

763 #–ià
defšed
(
COMPILER_VERSION_INTERNAL_STR
)

764 cÚ¡* 
	gšfo_v”siÚ_š‹º®
 = "INFO" ":" "compž”_v”siÚ_š‹º®[" 
COMPILER_VERSION_INTERNAL_STR
 "]";

768 #ifdeà
SIMULATE_VERSION_MAJOR


769 cÚ¡ 
	gšfo_simuÏ‹_v”siÚ
[] = {

772 
SIMULATE_VERSION_MAJOR
,

773 #ifdeà
SIMULATE_VERSION_MINOR


774 '.', 
SIMULATE_VERSION_MINOR
,

775 #ifdeà
SIMULATE_VERSION_PATCH


776 '.', 
SIMULATE_VERSION_PATCH
,

777 #ifdeà
SIMULATE_VERSION_TWEAK


778 '.', 
SIMULATE_VERSION_TWEAK
,

789 cÚ¡* 
	gšfo_¶©fÜm
 = "INFO" ":" "¶©fÜm[" 
PLATFORM_ID
 "]";

790 cÚ¡* 
	gšfo_¬ch
 = "INFO" ":" "¬ch[" 
ARCHITECTURE_ID
 "]";

794 #ià
defšed
(
__INTEL_COMPILER
è&& defšed(
_MSVC_LANG
) && _MSVC_LANG < 201403L

795 #ià
defšed
(
__INTEL_CXX11_MODE__
)

796 #ià
defšed
(
__ýp_agg»g©e_nsdmi
)

797 
	#CXX_STD
 201402L

	)

799 
	#CXX_STD
 201103L

	)

802 
	#CXX_STD
 199711L

	)

804 #–ià
defšed
(
_MSC_VER
è&& defšed(
_MSVC_LANG
)

805 
	#CXX_STD
 
_MSVC_LANG


	)

807 
	#CXX_STD
 
__ýlu¥lus


	)

810 cÚ¡ * 
	gšfo_Ïnguage_¡ªd¬d_deçuÉ
 = "INFO" ":" "standard_default["

811 #ià
CXX_STD
 > 202002L

813 #–ià
CXX_STD
 > 201703L

815 #–ià
CXX_STD
 >= 201703L

817 #–ià
CXX_STD
 >= 201402L

819 #–ià
CXX_STD
 >= 201103L

826 cÚ¡ * 
	gšfo_Ïnguage_ex‹nsiÚs_deçuÉ
 = "INFO" ":" "extensions_default["

827 #ià(
defšed
(
__þªg__
è|| defšed(
__GNUC__
è|| defšed(
__xlC__
) || \

828 
defšed
(
__TI_COMPILER_VERSION__
)) && \

829 !
defšed
(
__STRICT_ANSI__
)

838 
	$maš
(
¬gc
, * 
¬gv
[])

840 
»quœe
 = 0;

841 
»quœe
 +ð
šfo_compž”
[
¬gc
];

842 
»quœe
 +ð
šfo_¶©fÜm
[
¬gc
];

843 
»quœe
 +ð
šfo_¬ch
[
¬gc
];

844 #ifdeà
COMPILER_VERSION_MAJOR


845 
»quœe
 +ð
šfo_v”siÚ
[
¬gc
];

847 #ifdeà
COMPILER_VERSION_INTERNAL


848 
»quœe
 +ð
šfo_v”siÚ_š‹º®
[
¬gc
];

850 #ifdeà
SIMULATE_ID


851 
»quœe
 +ð
šfo_simuÏ‹
[
¬gc
];

853 #ifdeà
SIMULATE_VERSION_MAJOR


854 
»quœe
 +ð
šfo_simuÏ‹_v”siÚ
[
¬gc
];

856 #ià
	`defšed
(
__CRAYXT_COMPUTE_LINUX_TARGET
)

857 
»quœe
 +ð
šfo_üay
[
¬gc
];

859 
»quœe
 +ð
šfo_Ïnguage_¡ªd¬d_deçuÉ
[
¬gc
];

860 
»quœe
 +ð
šfo_Ïnguage_ex‹nsiÚs_deçuÉ
[
¬gc
];

861 ()
¬gv
;

862  
»quœe
;

863 
	}
}

	@build/bsApplication_autogen/RRZ2WDOS7P/moc_bsApplication.cpp

9 
	~"../../../¤c/š‹º/bsAµliÿtiÚ.h
"

10 
	~<QtGui/q‹xtcursÜ.h
>

11 
	~<QtGui/qsü“n.h
>

12 
	~<QtCÜe/qm‘©y³.h
>

14 #ià
__has_šþude
(<
QtCÜe
/
qtmoch–³rs
.
h
>)

15 
	~<QtCÜe/qtmoch–³rs.h
>

17 
	gQT_BEGIN_MOC_NAMESPACE


21 
	~<memÜy
>

23 #ià!
defšed
(
Q_MOC_OUTPUT_REVISION
)

25 #–ià
Q_MOC_OUTPUT_REVISION
 != 68

31 #iâdeà
Q_CONSTINIT


32 
	#Q_CONSTINIT


	)

35 
QT_WARNING_PUSH


36 
QT_WARNING_DISABLE_DEPRECATED


37 
QT_WARNING_DISABLE_GCC
("-Wuseless-cast")

38 
	gÇme¥aû
 {

40 #ifdeà
QT_MOC_HAS_STRINGDATA


41 
	sqt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS_t
 {};

42 
cÚ¡ex´
‡utØ
	gqt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS
 = 
QtMocH–³rs
::
¡ršgD©a
(

49 
	sqt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS_t
 {

50 
ušt
 
	goff£tsAndSizes
[8];

51 
	g¡ršgd©a0
[13];

52 
	g¡ršgd©a1
[12];

53 
	g¡ršgd©a2
[1];

54 
	g¡ršgd©a3
[10];

56 
	#QT_MOC_LITERAL
(
ofs
, 
Ën
) \

57 
	`ušt
((
qt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS_t
::
off£tsAndSizes
è+ 
ofs
), 
Ën


	)

58 
Q_CONSTINIT
 cÚ¡ 
qt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS_t
 
	gqt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS
 = {

60 
QT_MOC_LITERAL
(0, 12),

61 
QT_MOC_LITERAL
(13, 11),

62 
QT_MOC_LITERAL
(25, 0),

63 
QT_MOC_LITERAL
(26, 9)

70 #undeà
QT_MOC_LITERAL


74 
Q_CONSTINIT
 cÚ¡ 
ušt
 
	gqt_m‘a_d©a_CLASSRa¡”WšdowENDCLASS
[] = {

92 
QM‘aTy³
::
Void
,

93 
QM‘aTy³
::
Void
,

98 
Q_CONSTINIT
 cÚ¡ 
QM‘aObjeù
 
	gRa¡”Wšdow
::
¡©icM‘aObjeù
 = { {

99 
QM‘aObjeù
::
Su³rD©a
::
lšk
<
QWšdow
::
¡©icM‘aObjeù
>(),

100 
qt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS
.
off£tsAndSizes
,

101 
qt_m‘a_d©a_CLASSRa¡”WšdowENDCLASS
,

102 
qt_¡©ic_m‘aÿÎ
,

103 
nuÎ±r
,

104 
qt_šcom¶‘e_m‘aTy³A¼ay
<
qt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS_t
,

106 
QtPriv©e
::
Ty³AndFÜûCom¶‘e
<
Ra¡”Wšdow
, 
¡d
::
Œue_ty³
>,

108 
QtPriv©e
::
Ty³AndFÜûCom¶‘e
<, 
¡d
::
çl£_ty³
>,

110 
QtPriv©e
::
Ty³AndFÜûCom¶‘e
<, 
¡d
::
çl£_ty³
>

112 
nuÎ±r


115 
	gRa¡”Wšdow
::
	$qt_¡©ic_m‘aÿÎ
(
QObjeù
 *
_o
, 
QM‘aObjeù
::
C®l
 
_c
, 
_id
, **
_a
)

117 ià(
_c
 =ð
QM‘aObjeù
::
InvokeM‘aM‘hod
) {

118 autØ*
_t
 = 
¡©ic_ÿ¡
<
Ra¡”Wšdow
 *>(
_o
);

119 ()
_t
;

120 
_id
) {

121 0: 
_t
->
	`»nd”L©”
(); ;

122 1: 
_t
->
	`»nd”Now
(); ;

126 ()
_a
;

127 
	}
}

129 cÚ¡ 
QM‘aObjeù
 *
	gRa¡”Wšdow
::
	$m‘aObjeù
() const

131  
QObjeù
::
d_±r
->
m‘aObjeù
 ? QObjeù::d_±r->
	`dyÇmicM‘aObjeù
(è: &
¡©icM‘aObjeù
;

132 
	}
}

134 *
	gRa¡”Wšdow
::
	$qt_m‘aÿ¡
(cÚ¡ *
_þÇme
)

136 ià(!
_þÇme
è 
nuÎ±r
;

137 ià(!
	`¡rcmp
(
_þÇme
, 
qt_m‘a_¡ršgd©a_CLASSRa¡”WšdowENDCLASS
.
¡ršgd©a0
))

138  
¡©ic_ÿ¡
<*>(
this
);

139  
QWšdow
::
	`qt_m‘aÿ¡
(
_þÇme
);

140 
	}
}

142 
	gRa¡”Wšdow
::
	$qt_m‘aÿÎ
(
QM‘aObjeù
::
C®l
 
_c
, 
_id
, **
_a
)

144 
_id
 = 
QWšdow
::
	`qt_m‘aÿÎ
(
_c
, _id, 
_a
);

145 ià(
_id
 < 0)

146  
_id
;

147 ià(
_c
 =ð
QM‘aObjeù
::
InvokeM‘aM‘hod
) {

148 ià(
_id
 < 2)

149 
	`qt_¡©ic_m‘aÿÎ
(
this
, 
_c
, 
_id
, 
_a
);

150 
_id
 -= 2;

151 } ià(
_c
 =ð
QM‘aObjeù
::
Regi¡”M‘hodArgum’tM‘aTy³
) {

152 ià(
_id
 < 2)

153 *
»š‹½»t_ÿ¡
<
QM‘aTy³
 *>(
_a
[0]èð
	`QM‘aTy³
();

154 
_id
 -= 2;

156  
_id
;

157 
	}
}

158 
	gQT_WARNING_POP


	@build/bsApplication_autogen/moc_predefs.h

1 
	#__DBL_MIN_EXP__
 (-1021)

	)

2 
	#__ýp_©Œibu‹s
 200809L

	)

3 
	#__ýp_nÚty³_‹m¶©e_·¿m‘”_auto
 201606L

	)

4 
	#__UINT_LEAST16_MAX__
 0xffff

	)

5 
	#__FLT16_HAS_QUIET_NAN__
 1

	)

6 
	#__ATOMIC_ACQUIRE
 2

	)

7 
	#__FLT128_MAX_10_EXP__
 4932

	)

8 
	#__FLT_MIN__
 1.17549435082228750796873653722224568e-38F

	)

9 
	#__GCC_IEC_559_COMPLEX
 2

	)

10 
	#__ýp_agg»g©e_nsdmi
 201304L

	)

11 
	#__UINT_LEAST8_TYPE__
 

	)

12 
	#__SIZEOF_FLOAT80__
 16

	)

13 
	#__INTMAX_C
(
c
èø## 
L


	)

14 
	#__CHAR_BIT__
 8

	)

15 
	#__UINT8_MAX__
 0xff

	)

16 
	#__SCHAR_WIDTH__
 8

	)

17 
	#__WINT_MAX__
 0xffffffffU

	)

18 
	#__FLT32_MIN_EXP__
 (-125)

	)

19 
	#__ýp_¡©ic_as£¹
 201411L

	)

20 
	#QT_GUI_LIB
 1

	)

21 
	#__ORDER_LITTLE_ENDIAN__
 1234

	)

22 
	#__SIZE_MAX__
 0xffffffffffffffffUL

	)

23 
	#__WCHAR_MAX__
 0x7fffffff

	)

24 
	#__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
 1

	)

25 
	#__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
 1

	)

26 
	#__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
 1

	)

27 
	#__GCC_ATOMIC_CHAR_LOCK_FREE
 2

	)

28 
	#__GCC_IEC_559
 2

	)

29 
	#__FLT32X_DECIMAL_DIG__
 17

	)

30 
	#__FLT_EVAL_METHOD__
 0

	)

31 
	#__ýp_bš¬y_l™”®s
 201304L

	)

32 
	#__FLT64_DECIMAL_DIG__
 17

	)

33 
	#__ýp_nÛxû±_funùiÚ_ty³
 201510L

	)

34 
	#__GCC_ATOMIC_CHAR32_T_LOCK_FREE
 2

	)

35 
	#__ýp_v¬Ÿdic_‹m¶©es
 200704L

	)

36 
	#__UINT_FAST64_MAX__
 0xffffffffffffffffUL

	)

37 
	#__SIG_ATOMIC_TYPE__
 

	)

38 
	#__DBL_MIN_10_EXP__
 (-307)

	)

39 
	#__FINITE_MATH_ONLY__
 0

	)

40 
	#__ýp_v¬ŸbË_‹m¶©es
 201304L

	)

41 
	#__FLT32X_MAX_EXP__
 1024

	)

42 
	#__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
 1

	)

43 
	#__FLT32_HAS_DENORM__
 1

	)

44 
	#__UINT_FAST8_MAX__
 0xff

	)

45 
	#__ýp_rv®ue_»ã»nû
 200610L

	)

46 
	#__ýp_Ã¡ed_Çme¥aû_defš™iÚs
 201411L

	)

47 
	#__DEC64_MAX_EXP__
 385

	)

48 
	#__INT8_C
(
c
è
	)
c

49 
	#__INT_LEAST8_WIDTH__
 8

	)

50 
	#__ýp_v¬Ÿdic_usšg
 201611L

	)

51 
	#__UINT_LEAST64_MAX__
 0xffffffffffffffffUL

	)

52 
	#QT_OPENGL_LIB
 1

	)

53 
	#__INT_LEAST8_MAX__
 0x7f

	)

54 
	#__ýp_ÿ±u»_¡¬_this
 201603L

	)

55 
	#__SHRT_MAX__
 0x7fff

	)

56 
	#__LDBL_MAX__
 1.18973149535723176502126385303097021e+4932L

	)

57 
	#__FLT64X_MAX_10_EXP__
 4932

	)

58 
	#__ýp_if_cÚ¡ex´
 201606L

	)

59 
	#__LDBL_IS_IEC_60559__
 2

	)

60 
	#__FLT64X_HAS_QUIET_NAN__
 1

	)

61 
	#__UINT_LEAST8_MAX__
 0xff

	)

62 
	#__GCC_ATOMIC_BOOL_LOCK_FREE
 2

	)

63 
	#__FLT128_DENORM_MIN__
 6.47517511943802511092443895822764655e-4966F128

	)

64 
	#__UINTMAX_TYPE__
 

	)

65 
	#__lšux
 1

	)

66 
	#__DEC32_EPSILON__
 1E-6DF

	)

67 
	#__FLT_EVAL_METHOD_TS_18661_3__
 0

	)

68 
	#__unix
 1

	)

69 
	#__UINT32_MAX__
 0xffffffffU

	)

70 
	#__GXX_EXPERIMENTAL_CXX0X__
 1

	)

71 
	#__DBL_DENORM_MIN__
 (4.94065645841246544176568792868221372e-324L)

	)

72 
	#__FLT128_MIN_EXP__
 (-16381)

	)

73 
	#__WINT_MIN__
 0U

	)

74 
	#__FLT128_MIN_10_EXP__
 (-4931)

	)

75 
	#__FLT32X_IS_IEC_60559__
 2

	)

76 
	#__INT_LEAST16_WIDTH__
 16

	)

77 
	#__SCHAR_MAX__
 0x7f

	)

78 
	#__FLT128_MANT_DIG__
 113

	)

79 
	#__WCHAR_MIN__
 (-
__WCHAR_MAX__
 - 1)

	)

80 
	#__INT64_C
(
c
èø## 
L


	)

81 
	#__GCC_ATOMIC_POINTER_LOCK_FREE
 2

	)

82 
	#__FLT32X_MANT_DIG__
 53

	)

83 
	#__GCC_ATOMIC_CHAR16_T_LOCK_FREE
 2

	)

84 
	#__ýp_®igÃd_Ãw
 201606L

	)

85 
	#__FLT32_MAX_10_EXP__
 38

	)

86 
	#__FLT64X_EPSILON__
 1.08420217248550443400745280086994171e-19F64x

	)

87 
	#__STDC_HOSTED__
 1

	)

88 
	#__DEC64_MIN_EXP__
 (-382)

	)

89 
	#__ýp_deþty³_auto
 201304L

	)

90 
	#__DBL_DIG__
 15

	)

91 
	#__FLT32_DIG__
 6

	)

92 
	#__FLT_EPSILON__
 1.19209289550781250000000000000000000e-7F

	)

93 
	#__GXX_WEAK__
 1

	)

94 
	#__SHRT_WIDTH__
 16

	)

95 
	#__FLT32_IS_IEC_60559__
 2

	)

96 
	#__LDBL_MIN__
 3.36210314311209350626267781732175260e-4932L

	)

97 
	#__DBL_IS_IEC_60559__
 2

	)

98 
	#__DEC32_MAX__
 9.999999E96DF

	)

99 
	#__ýp_th»ad§ã_¡©ic_š™
 200806L

	)

100 
	#__ýp_’um”©Ü_©Œibu‹s
 201411L

	)

101 
	#__FLT64X_DENORM_MIN__
 3.64519953188247460252840593361941982e-4951F64x

	)

102 
	#__FLT32X_HAS_INFINITY__
 1

	)

103 
	#__INT32_MAX__
 0x7fffffff

	)

104 
	#__FLT16_DIG__
 3

	)

105 
	#__unix__
 1

	)

106 
	#__INT_WIDTH__
 32

	)

107 
	#__SIZEOF_LONG__
 8

	)

108 
	#__STDC_IEC_559__
 1

	)

109 
	#__STDC_ISO_10646__
 201706L

	)

110 
	#__UINT16_C
(
c
è
	)
c

111 
	#__DECIMAL_DIG__
 21

	)

112 
	#__STDC_IEC_559_COMPLEX__
 1

	)

113 
	#__FLT64_EPSILON__
 2.22044604925031308084726333618164062e-16F64

	)

114 
	#__gnu_lšux__
 1

	)

115 
	#__INT16_MAX__
 0x7fff

	)

116 
	#__FLT64_MIN_EXP__
 (-1021)

	)

117 
	#__FLT64X_MIN_10_EXP__
 (-4931)

	)

118 
	#__LDBL_HAS_QUIET_NAN__
 1

	)

119 
	#__FLT16_MIN_EXP__
 (-13)

	)

120 
	#__FLT64_MANT_DIG__
 53

	)

121 
	#__FLT64X_MANT_DIG__
 64

	)

122 
	#__GNUC__
 12

	)

123 
	#__GXX_RTTI
 1

	)

124 
	#__p›__
 2

	)

125 
	#__MMX__
 1

	)

126 
	#__FLT_HAS_DENORM__
 1

	)

127 
	#__SIZEOF_LONG_DOUBLE__
 16

	)

128 
	#__BIGGEST_ALIGNMENT__
 16

	)

129 
	#__STDC_UTF_16__
 1

	)

130 
	#__FLT64_MAX_10_EXP__
 308

	)

131 
	#__FLT16_MAX_10_EXP__
 4

	)

132 
	#__ýp_d–eg©šg_cÚ¡ruùÜs
 200604L

	)

133 
	#__FLT32_HAS_INFINITY__
 1

	)

134 
	#__DBL_MAX__
 (1.79769313486231570814527423731704357e+308L)

	)

135 
	#__ýp_¿w_¡ršgs
 200710L

	)

136 
	#__INT_FAST32_MAX__
 0x7fffffffffffffffL

	)

137 
	#__DBL_HAS_INFINITY__
 1

	)

138 
	#__SIZEOF_FLOAT__
 4

	)

139 
	#__HAVE_SPECULATION_SAFE_VALUE
 1

	)

140 
	#__ýp_fÞd_ex´essiÚs
 201603L

	)

141 
	#__DEC32_MIN_EXP__
 (-94)

	)

142 
	#__INTPTR_WIDTH__
 64

	)

143 
	#__FLT64X_HAS_INFINITY__
 1

	)

144 
	#__UINT_LEAST32_MAX__
 0xffffffffU

	)

145 
	#__FLT32X_HAS_DENORM__
 1

	)

146 
	#__INT_FAST16_TYPE__
 

	)

147 
	#__MMX_WITH_SSE__
 1

	)

148 
	#__LDBL_HAS_DENORM__
 1

	)

149 
	#QT_WIDGETS_LIB
 1

	)

150 
	#__SEG_GS
 1

	)

151 
	#__ýlu¥lus
 201703L

	)

152 
	#__ýp_»f_qu®if›rs
 200710L

	)

153 
	#__DEC32_MIN__
 1E-95DF

	)

154 
	#__DEPRECATED
 1

	)

155 
	#__ýp_rv®ue_»ã»nûs
 200610L

	)

156 
	#__DBL_MAX_EXP__
 1024

	)

157 
	#__WCHAR_WIDTH__
 32

	)

158 
	#__FLT32_MAX__
 3.40282346638528859811704183484516925e+38F32

	)

159 
	#__DEC128_EPSILON__
 1E-33DL

	)

160 
	#__FLT16_DECIMAL_DIG__
 5

	)

161 
	#__SSE2_MATH__
 1

	)

162 
	#__ATOMIC_HLE_RELEASE
 131072

	)

163 
	#__PTRDIFF_MAX__
 0x7fffffffffffffffL

	)

164 
	#__amd64
 1

	)

165 
	#__ATOMIC_HLE_ACQUIRE
 65536

	)

166 
	#__GNUG__
 12

	)

167 
	#__LONG_LONG_MAX__
 0x7fffffffffffffffLL

	)

168 
	#__SIZEOF_SIZE_T__
 8

	)

169 
	#__ýp_nsdmi
 200809L

	)

170 
	#__FLT64X_MIN_EXP__
 (-16381)

	)

171 
	#__SIZEOF_WINT_T__
 4

	)

172 
	#__LONG_LONG_WIDTH__
 64

	)

173 
	#__ýp_š™Ÿliz”_li¡s
 200806L

	)

174 
	#__FLT32_MAX_EXP__
 128

	)

175 
	#ABI_ID
 "ELF"

	)

176 
	#__ýp_hex_æßt
 201603L

	)

177 
	#__GXX_ABI_VERSION
 1017

	)

178 
	#__FLT128_HAS_INFINITY__
 1

	)

179 
	#__FLT_MIN_EXP__
 (-125)

	)

180 
	#__GCC_HAVE_DWARF2_CFI_ASM
 1

	)

181 
	#__x86_64
 1

	)

182 
	#__ýp_Ïmbdas
 200907L

	)

183 
	#__INT_FAST64_TYPE__
 

	)

184 
	#__FLT64_DENORM_MIN__
 4.94065645841246544176568792868221372e-324F64

	)

185 
	#__ýp_‹m¶©e_auto
 201606L

	)

186 
	#__DBL_MIN__
 (2.22507385850720138309023271733240406e-308L)

	)

187 
	#__FLT16_DENORM_MIN__
 5.96046447753906250000000000000000000e-8F16

	)

188 
	#__FLT128_EPSILON__
 1.92592994438723585305597794258492732e-34F128

	)

189 
	#__FLT64X_NORM_MAX__
 1.18973149535723176502126385303097021e+4932F64x

	)

190 
	#__SIZEOF_POINTER__
 8

	)

191 
	#__LP64__
 1

	)

192 
	#__DBL_HAS_QUIET_NAN__
 1

	)

193 
	#__FLT32X_EPSILON__
 2.22044604925031308084726333618164062e-16F32x

	)

194 
	#__DECIMAL_BID_FORMAT__
 1

	)

195 
	#__FLT64_MIN_10_EXP__
 (-307)

	)

196 
	#__FLT16_MIN_10_EXP__
 (-4)

	)

197 
	#__FLT64X_DECIMAL_DIG__
 21

	)

198 
	#__DEC128_MIN__
 1E-6143DL

	)

199 
	#__REGISTER_PREFIX__


	)

200 
	#__UINT16_MAX__
 0xffff

	)

201 
	#__LDBL_HAS_INFINITY__
 1

	)

202 
	#__FLT32_MIN__
 1.17549435082228750796873653722224568e-38F32

	)

203 
	#__UINT8_TYPE__
 

	)

204 
	#__FLT_DIG__
 6

	)

205 
	#__NO_INLINE__
 1

	)

206 
	#__DEC_EVAL_METHOD__
 2

	)

207 
	#__DEC128_MAX__
 9.999999999999999999999999999999999E6144DL

	)

208 
	#__FLT_MANT_DIG__
 24

	)

209 
	#__LDBL_DECIMAL_DIG__
 21

	)

210 
	#__VERSION__
 "12.2.0"

	)

211 
	#__UINT64_C
(
c
èø## 
UL


	)

212 
	#__ýp_unicode_ch¬aù”s
 201411L

	)

213 
	#_STDC_PREDEF_H
 1

	)

214 
	#__INT_LEAST32_MAX__
 0x7fffffff

	)

215 
	#__GCC_ATOMIC_INT_LOCK_FREE
 2

	)

216 
	#__FLT128_MAX_EXP__
 16384

	)

217 
	#__FLT32_MANT_DIG__
 24

	)

218 
	#__FLOAT_WORD_ORDER__
 
__ORDER_LITTLE_ENDIAN__


	)

219 
	#SIZEOF_DPTR
 ((*))

	)

220 
	#__FLT32X_MIN_EXP__
 (-1021)

	)

221 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

222 
	#__ýp_agg»g©e_ba£s
 201603L

	)

223 
	#__FLT128_HAS_DENORM__
 1

	)

224 
	#__FLT32_DECIMAL_DIG__
 9

	)

225 
	#__FLT128_DIG__
 33

	)

226 
	#__INT32_C
(
c
è
	)
c

227 
	#__DEC64_EPSILON__
 1E-15DD

	)

228 
	#__ORDER_PDP_ENDIAN__
 3412

	)

229 
	#__DEC128_MIN_EXP__
 (-6142)

	)

230 
	#__INT_FAST32_TYPE__
 

	)

231 
	#__UINT_LEAST16_TYPE__
 

	)

232 
	#unix
 1

	)

233 
	#__DBL_HAS_DENORM__
 1

	)

234 
	#__ýp_¹ti
 199711L

	)

235 
	#__SIZE_TYPE__
 

	)

236 
	#__UINT64_MAX__
 0xffffffffffffffffUL

	)

237 
	#__FLT_IS_IEC_60559__
 2

	)

238 
	#__GNUC_WIDE_EXECUTION_CHARSET_NAME
 "UTF-32LE"

	)

239 
	#__FLT64X_DIG__
 18

	)

240 
	#__INT8_TYPE__
 sigÃd 

	)

241 
	#__ýp_dig™_£·¿tÜs
 201309L

	)

242 
	#__ELF__
 1

	)

243 
	#__GCC_ASM_FLAG_OUTPUTS__
 1

	)

244 
	#__UINT32_TYPE__
 

	)

245 
	#__FLT_RADIX__
 2

	)

246 
	#__INT_LEAST16_TYPE__
 

	)

247 
	#__LDBL_EPSILON__
 1.08420217248550443400745280086994171e-19L

	)

248 
	#__UINTMAX_C
(
c
èø## 
UL


	)

249 
	#__GLIBCXX_BITSIZE_INT_N_0
 128

	)

250 
	#__k8
 1

	)

251 
	#__FLT32X_MIN__
 2.22507385850720138309023271733240406e-308F32x

	)

252 
	#__SIG_ATOMIC_MAX__
 0x7fffffff

	)

253 
	#__GCC_ATOMIC_WCHAR_T_LOCK_FREE
 2

	)

254 
	#__USER_LABEL_PREFIX__


	)

255 
	#__STDC_IEC_60559_BFP__
 201404L

	)

256 
	#__SIZEOF_PTRDIFF_T__
 8

	)

257 
	#__LDBL_DIG__
 18

	)

258 
	#__FLT64_IS_IEC_60559__
 2

	)

259 
	#__x86_64__
 1

	)

260 
	#__FLT16_IS_IEC_60559__
 2

	)

261 
	#__FLT16_MAX_EXP__
 16

	)

262 
	#__DEC32_SUBNORMAL_MIN__
 0.000001E-95DF

	)

263 
	#__INT_FAST16_MAX__
 0x7fffffffffffffffL

	)

264 
	#__GCC_CONSTRUCTIVE_SIZE
 64

	)

265 
	#__FLT64_DIG__
 15

	)

266 
	#__UINT_FAST32_MAX__
 0xffffffffffffffffUL

	)

267 
	#__UINT_LEAST64_TYPE__
 

	)

268 
	#__FLT16_EPSILON__
 9.76562500000000000000000000000000000e-4F16

	)

269 
	#__FLT_HAS_QUIET_NAN__
 1

	)

270 
	#__FLT_MAX_10_EXP__
 38

	)

271 
	#__LONG_MAX__
 0x7fffffffffffffffL

	)

272 
	#__FLT64X_HAS_DENORM__
 1

	)

273 
	#__DEC128_SUBNORMAL_MIN__
 0.000000000000000000000000000000001E-6143DL

	)

274 
	#__FLT_HAS_INFINITY__
 1

	)

275 
	#__GNUC_EXECUTION_CHARSET_NAME
 "UTF-8"

	)

276 
	#__ýp_unicode_l™”®s
 200710L

	)

277 
	#__UINT_FAST16_TYPE__
 

	)

278 
	#__DEC64_MAX__
 9.999999999999999E384DD

	)

279 
	#__INT_FAST32_WIDTH__
 64

	)

280 
	#__CHAR16_TYPE__
 

	)

281 
	#__PRAGMA_REDEFINE_EXTNAME
 1

	)

282 
	#__SIZE_WIDTH__
 64

	)

283 
	#__SEG_FS
 1

	)

284 
	#__INT_LEAST16_MAX__
 0x7fff

	)

285 
	#__FLT16_NORM_MAX__
 6.55040000000000000000000000000000000e+4F16

	)

286 
	#__DEC64_MANT_DIG__
 16

	)

287 
	#__INT64_MAX__
 0x7fffffffffffffffL

	)

288 
	#__FLT32_DENORM_MIN__
 1.40129846432481707092372958328991613e-45F32

	)

289 
	#__SIG_ATOMIC_WIDTH__
 32

	)

290 
	#__INT_LEAST64_TYPE__
 

	)

291 
	#__INT16_TYPE__
 

	)

292 
	#__INT_LEAST8_TYPE__
 sigÃd 

	)

293 
	#__FLT16_MAX__
 6.55040000000000000000000000000000000e+4F16

	)

294 
	#__ýp_¡ruùu»d_bšdšgs
 201606L

	)

295 
	#__SIZEOF_INT__
 4

	)

296 
	#__DEC32_MAX_EXP__
 97

	)

297 
	#__INT_FAST8_MAX__
 0x7f

	)

298 
	#__FLT128_MAX__
 1.18973149535723176508575932662800702e+4932F128

	)

299 
	#__INTPTR_MAX__
 0x7fffffffffffffffL

	)

300 
	#__ýp_sized_d—ÎoÿtiÚ
 201309L

	)

301 
	#__ýp_gu¬ª‹ed_cÝy_–isiÚ
 201606L

	)

302 
	#lšux
 1

	)

303 
	#__FLT64_HAS_QUIET_NAN__
 1

	)

304 
	#__FLT32_MIN_10_EXP__
 (-37)

	)

305 
	#__EXCEPTIONS
 1

	)

306 
	#__PTRDIFF_WIDTH__
 64

	)

307 
	#__LDBL_MANT_DIG__
 64

	)

308 
	#__ýp_¿nge_ba£d_fÜ
 201603L

	)

309 
	#__FLT64_HAS_INFINITY__
 1

	)

310 
	#__FLT64X_MAX__
 1.18973149535723176502126385303097021e+4932F64x

	)

311 
	#__FLT16_HAS_INFINITY__
 1

	)

312 
	#__STDCPP_DEFAULT_NEW_ALIGNMENT__
 16

	)

313 
	#__SIG_ATOMIC_MIN__
 (-
__SIG_ATOMIC_MAX__
 - 1)

	)

314 
	#__code_mod–_sm®l__
 1

	)

315 
	#__GCC_ATOMIC_LONG_LOCK_FREE
 2

	)

316 
	#__ýp_nÚty³_‹m¶©e_¬gs
 201411L

	)

317 
	#__DEC32_MANT_DIG__
 7

	)

318 
	#__ýp_»tuº_ty³_deduùiÚ
 201304L

	)

319 
	#__k8__
 1

	)

320 
	#__INTPTR_TYPE__
 

	)

321 
	#__UINT16_TYPE__
 

	)

322 
	#__WCHAR_TYPE__
 

	)

323 
	#__pic__
 2

	)

324 
	#__UINTPTR_MAX__
 0xffffffffffffffffUL

	)

325 
	#__INT_FAST64_WIDTH__
 64

	)

326 
	#__ýp_deþty³
 200707L

	)

327 
	#__INT_FAST64_MAX__
 0x7fffffffffffffffL

	)

328 
	#__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
 1

	)

329 
	#__FLT_NORM_MAX__
 3.40282346638528859811704183484516925e+38F

	)

330 
	#__FLT64X_MAX_EXP__
 16384

	)

331 
	#__UINT_FAST64_TYPE__
 

	)

332 
	#__ýp_šlše_v¬ŸbËs
 201606L

	)

333 
	#__INT_MAX__
 0x7fffffff

	)

334 
	#__lšux__
 1

	)

335 
	#__INT64_TYPE__
 

	)

336 
	#__FLT_MAX_EXP__
 128

	)

337 
	#__ORDER_BIG_ENDIAN__
 4321

	)

338 
	#__DBL_MANT_DIG__
 53

	)

339 
	#__ýp_šh”™šg_cÚ¡ruùÜs
 201511L

	)

340 
	#QT_CORE_LIB
 1

	)

341 
	#__SIZEOF_FLOAT128__
 16

	)

342 
	#__INT_LEAST64_MAX__
 0x7fffffffffffffffL

	)

343 
	#__DEC64_MIN__
 1E-383DD

	)

344 
	#__WINT_TYPE__
 

	)

345 
	#__UINT_LEAST32_TYPE__
 

	)

346 
	#__SIZEOF_SHORT__
 2

	)

347 
	#__FLT32_NORM_MAX__
 3.40282346638528859811704183484516925e+38F32

	)

348 
	#__SSE__
 1

	)

349 
	#__LDBL_MIN_EXP__
 (-16381)

	)

350 
	#__FLT64_MAX__
 1.79769313486231570814527423731704357e+308F64

	)

351 
	#__amd64__
 1

	)

352 
	#__WINT_WIDTH__
 32

	)

353 
	#__INT_LEAST64_WIDTH__
 64

	)

354 
	#__LDBL_MAX_EXP__
 16384

	)

355 
	#__FLT32X_MAX_10_EXP__
 308

	)

356 
	#__SIZEOF_INT128__
 16

	)

357 
	#__FLT16_MIN__
 6.10351562500000000000000000000000000e-5F16

	)

358 
	#__FLT64X_IS_IEC_60559__
 2

	)

359 
	#__LDBL_MAX_10_EXP__
 4932

	)

360 
	#__ATOMIC_RELAXED
 0

	)

361 
	#__DBL_EPSILON__
 (2.22044604925031308084726333618164062e-16L)

	)

362 
	#__FLT128_MIN__
 3.36210314311209350626267781732175260e-4932F128

	)

363 
	#_LP64
 1

	)

364 
	#__UINT8_C
(
c
è
	)
c

365 
	#__FLT64_MAX_EXP__
 1024

	)

366 
	#__INT_LEAST32_TYPE__
 

	)

367 
	#__SIZEOF_WCHAR_T__
 4

	)

368 
	#__GNUC_PATCHLEVEL__
 0

	)

369 
	#__FLT128_NORM_MAX__
 1.18973149535723176508575932662800702e+4932F128

	)

370 
	#__FLT64_NORM_MAX__
 1.79769313486231570814527423731704357e+308F64

	)

371 
	#__FLT128_HAS_QUIET_NAN__
 1

	)

372 
	#__INTMAX_MAX__
 0x7fffffffffffffffL

	)

373 
	#__INT_FAST8_TYPE__
 sigÃd 

	)

374 
	#__ýp_Çme¥aû_©Œibu‹s
 201411L

	)

375 
	#__FLT64X_MIN__
 3.36210314311209350626267781732175260e-4932F64x

	)

376 
	#__STDCPP_THREADS__
 1

	)

377 
	#__GNUC_STDC_INLINE__
 1

	)

378 
	#__FLT64_HAS_DENORM__
 1

	)

379 
	#__FLT32_EPSILON__
 1.19209289550781250000000000000000000e-7F32

	)

380 
	#__FLT16_HAS_DENORM__
 1

	)

381 
	#__DBL_DECIMAL_DIG__
 17

	)

382 
	#__STDC_UTF_32__
 1

	)

383 
	#__INT_FAST8_WIDTH__
 8

	)

384 
	#__FXSR__
 1

	)

385 
	#__FLT32X_MAX__
 1.79769313486231570814527423731704357e+308F32x

	)

386 
	#__DBL_NORM_MAX__
 (1.79769313486231570814527423731704357e+308L)

	)

387 
	#__BYTE_ORDER__
 
__ORDER_LITTLE_ENDIAN__


	)

388 
	#__GCC_DESTRUCTIVE_SIZE
 64

	)

389 
	#__INTMAX_WIDTH__
 64

	)

390 
	#__ýp_ruÁime_¬¿ys
 198712L

	)

391 
	#__UINT64_TYPE__
 

	)

392 
	#__UINT32_C
(
c
èø## 
U


	)

393 
	#__ýp_®Ÿs_‹m¶©es
 200704L

	)

394 
	#__FLT_DENORM_MIN__
 1.40129846432481707092372958328991613e-45F

	)

395 
	#__FLT128_IS_IEC_60559__
 2

	)

396 
	#__INT8_MAX__
 0x7f

	)

397 
	#__LONG_WIDTH__
 64

	)

398 
	#__PIC__
 2

	)

399 
	#__UINT_FAST32_TYPE__
 

	)

400 
	#__FLT16_MANT_DIG__
 11

	)

401 
	#__FLT32X_NORM_MAX__
 1.79769313486231570814527423731704357e+308F32x

	)

402 
	#__CHAR32_TYPE__
 

	)

403 
	#__FLT_MAX__
 3.40282346638528859811704183484516925e+38F

	)

404 
	#__ýp_cÚ¡ex´
 201603L

	)

405 
	#__SSE2__
 1

	)

406 
	#__ýp_deduùiÚ_guides
 201703L

	)

407 
	#__INT32_TYPE__
 

	)

408 
	#__SIZEOF_DOUBLE__
 8

	)

409 
	#__ýp_exû±iÚs
 199711L

	)

410 
	#__FLT_MIN_10_EXP__
 (-37)

	)

411 
	#__FLT64_MIN__
 2.22507385850720138309023271733240406e-308F64

	)

412 
	#__INT_LEAST32_WIDTH__
 32

	)

413 
	#__INTMAX_TYPE__
 

	)

414 
	#__DEC128_MAX_EXP__
 6145

	)

415 
	#__FLT32X_HAS_QUIET_NAN__
 1

	)

416 
	#__ATOMIC_CONSUME
 1

	)

417 
	#__GNUC_MINOR__
 2

	)

418 
	#__GLIBCXX_TYPE_INT_N_0
 
__št128


	)

419 
	#__INT_FAST16_WIDTH__
 64

	)

420 
	#__UINTMAX_MAX__
 0xffffffffffffffffUL

	)

421 
	#__PIE__
 2

	)

422 
	#__FLT32X_DENORM_MIN__
 4.94065645841246544176568792868221372e-324F32x

	)

423 
	#__ýp_‹m¶©e_‹m¶©e_¬gs
 201611L

	)

424 
	#__DBL_MAX_10_EXP__
 308

	)

425 
	#__LDBL_DENORM_MIN__
 3.64519953188247460252840593361941982e-4951L

	)

426 
	#__INT16_C
(
c
è
	)
c

427 
	#__STDC__
 1

	)

428 
	#__FLT32X_DIG__
 15

	)

429 
	#__PTRDIFF_TYPE__
 

	)

430 
	#__ATOMIC_SEQ_CST
 5

	)

431 
	#__FLT32X_MIN_10_EXP__
 (-307)

	)

432 
	#__UINTPTR_TYPE__
 

	)

433 
	#__DEC64_SUBNORMAL_MIN__
 0.000000000000001E-383DD

	)

434 
	#__DEC128_MANT_DIG__
 34

	)

435 
	#__LDBL_MIN_10_EXP__
 (-4931)

	)

436 
	#__ýp_g’”ic_Ïmbdas
 201304L

	)

437 
	#__SSE_MATH__
 1

	)

438 
	#__SIZEOF_LONG_LONG__
 8

	)

439 
	#__ýp_u£r_defšed_l™”®s
 200809L

	)

440 
	#__FLT128_DECIMAL_DIG__
 36

	)

441 
	#__GCC_ATOMIC_LLONG_LOCK_FREE
 2

	)

442 
	#__FLT32_HAS_QUIET_NAN__
 1

	)

443 
	#__FLT_DECIMAL_DIG__
 9

	)

444 
	#__UINT_FAST16_MAX__
 0xffffffffffffffffUL

	)

445 
	#__LDBL_NORM_MAX__
 1.18973149535723176502126385303097021e+4932L

	)

446 
	#__GCC_ATOMIC_SHORT_LOCK_FREE
 2

	)

447 
	#__UINT_FAST8_TYPE__
 

	)

448 
	#_GNU_SOURCE
 1

	)

449 
	#__ýp_š™_ÿ±u»s
 201304L

	)

450 
	#__ATOMIC_ACQ_REL
 4

	)

451 
	#__ATOMIC_RELEASE
 3

	)

	@build/bsApplication_autogen/mocs_compilation.cpp

2 
	~"RRZ2WDOS7P/moc_bsAµliÿtiÚ.ýp
"

	@src/intern/bsApplication.cpp

2 
	~"bsAµliÿtiÚ.h
"

7 
	gRa¡”Wšdow
::
	$Ra¡”Wšdow
(
QWšdow
 *
·»Á
)

8 : 
	`QWšdow
(
·»Á
)

9 , 
	`m_backšgStÜe
(
Ãw
 
	$QBackšgStÜe
(
this
))

11 
	`£tGeom‘ry
(100, 100, 300, 200);

12 
	}
}

17 
boÞ
 
	gRa¡”Wšdow
::
	$ev’t
(
QEv’t
 *
ev’t
)

19 ià(
ev’t
->
	`ty³
(è=ð
QEv’t
::
Upd©eReque¡
) {

20 
	`»nd”Now
();

21  
Œue
;

23  
QWšdow
::
	`ev’t
(
ev’t
);

24 
	}
}

28 
	gRa¡”Wšdow
::
	$»nd”L©”
()

30 
	`»que¡Upd©e
();

31 
	}
}

36 
	gRa¡”Wšdow
::
	$»sizeEv’t
(
QResizeEv’t
 *
»sizeEv’t
)

38 
m_backšgStÜe
->
	`»size
(
»sizeEv’t
->
	`size
());

39 
	}
}

43 
	gRa¡”Wšdow
::
	$expo£Ev’t
(
QExpo£Ev’t
 *)

45 ià(
	`isExpo£d
())

46 
	`»nd”Now
();

47 
	}
}

52 
	gRa¡”Wšdow
::
	$»nd”Now
()

54 ià(!
	`isExpo£d
())

57 
QReù
 
	`»ù
(0, 0, 
	`width
(), 
	`height
());

58 
m_backšgStÜe
->
	`begšPašt
(
»ù
);

60 
QPaštDeviû
 *
deviû
 = 
m_backšgStÜe
->
	`·štDeviû
();

61 
QPaš‹r
 
	`·š‹r
(
deviû
);

63 
·š‹r
.
	`fžlReù
(0, 0, 
	`width
(), 
	`height
(), 
QG¿d›Á
::
NightFade
);

64 
	`»nd”
(&
·š‹r
);

65 
·š‹r
.
	`’d
();

67 
m_backšgStÜe
->
	`’dPašt
();

68 
m_backšgStÜe
->
	`æush
(
»ù
);

69 
	}
}

73 
	gRa¡”Wšdow
::
	$»nd”
(
QPaš‹r
 *
·š‹r
)

75 
·š‹r
->
	`d¿wText
(
	`QReùF
(0, 0, 
	`width
(), 
	`height
()), 
Qt
::
AlignC’‹r
, 
	`QSŒšgL™”®
("QWindow"));

76 
	}
}

	@src/intern/bsApplication.h

1 #iâdeà
BSAPPLICATION_H


2 
	#BSAPPLICATION_H


	)

4 
	~<QtGui
>

5 
	~<QScÝedPoš‹r
>

7 þas 
	cRa¡”Wšdow
 : 
public
 
QWšdow


9 
Q_OBJECT


10 
public
:

11 
ex¶ic™
 
Ra¡”Wšdow
(
QWšdow
 *
·»Á
 = 
nuÎ±r
);

13 
vœtu®
 
»nd”
(
QPaš‹r
 *
·š‹r
);

15 
public
 
	m¦Ùs
:

16 
»nd”L©”
();

17 
»nd”Now
();

19 
	m´Ùeùed
:

20 
boÞ
 
	$ev’t
(
QEv’t
 *
ev’t
è
ov”ride
;

22 
	$»sizeEv’t
(
QResizeEv’t
 *
ev’t
è
ov”ride
;

23 
	$expo£Ev’t
(
QExpo£Ev’t
 *
ev’t
è
ov”ride
;

25 
´iv©e
:

26 
QScÝedPoš‹r
<
QBackšgStÜe
> 
m_backšgStÜe
;

	@src/intern/bsVM/bsVM.cpp

	@src/intern/bsVM/bsVM.h

	@src/intern/bsVM/tests/build_test.cpp

	@src/intern/main.cpp

2 
	~"PythÚ.h
"

3 
	~"bsAµliÿtiÚ.h
"

6 
	$maš
(
¬gc
, **
¬gv
)

8 
QGuiAµliÿtiÚ
 
	`­p
(
¬gc
, 
¬gv
);

10 
Ra¡”Wšdow
 
wšdow
;

11 
wšdow
.
	`show
();

13  
­p
.
	`exec
();

14 
	}
}

	@
1
.
1
/usr/include
10
390
build/CMakeFiles/3.28.20231111-g33d372c/CompilerIdCXX/CMakeCXXCompilerId.cpp
build/bsApplication_autogen/RRZ2WDOS7P/moc_bsApplication.cpp
build/bsApplication_autogen/moc_predefs.h
build/bsApplication_autogen/mocs_compilation.cpp
src/intern/bsApplication.cpp
src/intern/bsApplication.h
src/intern/bsVM/bsVM.cpp
src/intern/bsVM/bsVM.h
src/intern/bsVM/tests/build_test.cpp
src/intern/main.cpp
